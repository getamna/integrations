"use strict";var __awaiter=this&&this.__awaiter||function(e,t,i,c){return new(i||(i=Promise))((function(s,a){function r(e){try{n(c.next(e))}catch(e){a(e)}}function o(e){try{n(c.throw(e))}catch(e){a(e)}}function n(e){var t;e.done?s(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,o)}n((c=c.apply(e,t||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0});const chai_1=require("chai"),__1=require("../");require("mocha");const services_1=require("../services"),common_1=require("./common");describe("Check Libmon",()=>{it("Fail after max Mail calls",()=>new Promise((e,t)=>__awaiter(void 0,void 0,void 0,(function*(){const i=new __1.Integrations(common_1.authOpts);try{const e=i.getMailService(services_1.MailServiceType.Microsoft);for(let t=0;t<=10;t++)yield e.getMessage("AQMkADAwATMwMAItYWIzOS1kZABhNy0wMAItMDAKAEYAAAO_QK5cRtNUSYjAfgczIch9BwDtTDp0pb2pRJkZvS8CVTuJAAACAQwAAAAaDbfCGRP4SZwLgj1YrlGGAAPFOtOTAAAA");console.log("works!"),t()}catch(i){i.message.includes("limit exceeded")?e(!0):t()}})))).timeout(1e4),it("Fail after max Calendar calls",()=>new Promise((e,t)=>__awaiter(void 0,void 0,void 0,(function*(){const i=new __1.Integrations(common_1.authOpts);try{const e=i.getCalendarService(services_1.CalendarServiceType.Microsoft);for(let t=0;t<=10;t++)yield e.getEventFromRange(new Date,new Date,!1);t()}catch(i){i.message.includes("limit exceeded")?e(!0):t()}})))).timeout(1e4),it("Fail after second task service",()=>__awaiter(void 0,void 0,void 0,(function*(){try{const e=new __1.Integrations(common_1.authOpts);e.getTaskService(services_1.TaskServiceType.Microsoft),e.getTaskService(services_1.TaskServiceType.Todoist),chai_1.assert(!1)}catch(e){e.message.includes("limit exceeded")?chai_1.assert(!0):chai_1.assert(!1)}}))),it("Work after valid token",()=>__awaiter(void 0,void 0,void 0,(function*(){try{const e=new __1.Integrations(common_1.authOpts,"C8F9B3903257130DD65366B44A7DE0A9");e.getTaskService(services_1.TaskServiceType.Microsoft),e.getTaskService(services_1.TaskServiceType.Todoist),chai_1.assert(!0)}catch(e){chai_1.assert(!1)}})))});