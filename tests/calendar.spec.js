"use strict";var __awaiter=this&&this.__awaiter||function(e,t,o,i){return new(o||(o=Promise))((function(n,a){function d(e){try{r(i.next(e))}catch(e){a(e)}}function l(e){try{r(i.throw(e))}catch(e){a(e)}}function r(e){var t;e.done?n(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(d,l)}r((i=i.apply(e,t||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0});const chai_1=require("chai");require("mocha");const common_1=require("./common"),services_1=require("../services");let outlookCalendar=common_1.Integrations.getCalendarService(services_1.CalendarServiceType.Microsoft),googleCalendar=common_1.Integrations.getCalendarService(services_1.CalendarServiceType.Google),googleId="",outlookId="";describe("Outlook Calendar Service",()=>{it("Create event",()=>__awaiter(void 0,void 0,void 0,(function*(){const e={subject:"testing from VS",body:"testing now",startTime:new Date("2020-10-12T00:00:00"),endTime:new Date("2020-10-12T03:00:00"),timeZone:"",attendees:[],type:"Required",isOnlineMeeting:!0,onlineMeetingProvider:"teamsForBusiness"};outlookId=yield outlookCalendar.createEvent(e)}))).timeout(5e3),it("Get event by Id",()=>__awaiter(void 0,void 0,void 0,(function*(){let e=yield outlookCalendar.getEventById(outlookId);chai_1.expect(e.subject).to.equal("testing from VS")}))),it("Get event by range",()=>__awaiter(void 0,void 0,void 0,(function*(){const e=new Date("2020-10-08"),t=new Date("2020-11-16");yield outlookCalendar.getEventFromRange(e,t,!1)}))),it("Update Event by Id",()=>__awaiter(void 0,void 0,void 0,(function*(){let e={subject:"changed again",startTime:new Date("2020-12-08"),endTime:new Date("2020-12-16"),timeZone:"UTC"},t=yield outlookCalendar.updateEvent(outlookId,e);const o=yield outlookCalendar.getEventById(t);chai_1.expect(o.subject).to.equal("changed again")}))).timeout(5e3),it("delete event by Id",()=>__awaiter(void 0,void 0,void 0,(function*(){(yield outlookCalendar.deleteEventById(outlookId))?console.log("deleted"):console.log("failed to delete")})))}),describe("Google Calendar Service",()=>{it("Create event",()=>__awaiter(void 0,void 0,void 0,(function*(){let e={subject:"testing from VS complete",body:"testing now",startTime:new Date("2020-10-12"),endTime:new Date("2020-10-18"),attendees:[{name:"Hiromi",email:"hiromi3310@gmail.com"},{name:"Hiromski",email:"hiromski95@gmail.com"}]};googleId=yield googleCalendar.createEvent(e)}))),it("Get event by Id",()=>__awaiter(void 0,void 0,void 0,(function*(){yield googleCalendar.getEventById(googleId)}))),it("Get event by range",()=>__awaiter(void 0,void 0,void 0,(function*(){const e=new Date("2020-10-08T00:00:00Z"),t=new Date("2020-10-16T03:00:00Z");yield googleCalendar.getEventFromRange(e,t,!1)}))),it("Update event by Id",()=>__awaiter(void 0,void 0,void 0,(function*(){let e={subject:"changed from VS",startTime:new Date("2020-10-12T00:00:00"),endTime:new Date("2020-10-18T00:00:00"),timeZone:"UTC"};yield googleCalendar.updateEvent(googleId,e)}))),it("Delete event by Id",()=>__awaiter(void 0,void 0,void 0,(function*(){(yield googleCalendar.deleteEventById(googleId))?console.log("deleted"):console.log("failed to delete")})))});