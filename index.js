"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const libmon_1=require("libmon"),track_1=require("./models/track"),services_1=require("./services");exports.MailServiceType=services_1.MailServiceType,exports.CalendarServiceType=services_1.CalendarServiceType,exports.TaskServiceType=services_1.TaskServiceType,exports.TeamServiceType=services_1.TeamServiceType;const calendar_1=require("./services/calendar/calendar"),task_1=require("./services/tasks/task"),team_1=__importDefault(require("./services/team/team"));class Integrations{constructor(e,r){this.opts=e,this.authorizers={},this.subscriptions=[],this.authorizers=e.authorizers||{},libmon_1.Libmon.initialize("integrations"),libmon_1.Libmon.validate(r),this.setupLibmon()}setupLibmon(){libmon_1.Libmon.setupCounter(track_1.DemoCounter.MailActions,10),libmon_1.Libmon.setupCounter(track_1.DemoCounter.CalendarActions,10),libmon_1.Libmon.setupCounter(track_1.DemoCounter.TaskServices,1)}addAuthorizer(e,r){return this.authorizers[e]=r}getAuthorizers(){return this.authorizers}trackItem(e){return this.subscriptions.push(e)}getMailService(e){const{authorizers:r}=this;return new services_1.MailService(e,{authorizers:r,onSubscription:this.onSubscriptionChanged})}getCalendarService(e){const{authorizers:r}=this;return new calendar_1.CalendarService(e,{authorizers:r,onSubscription:this.onSubscriptionChanged})}getTaskService(e){libmon_1.Libmon.increment(track_1.DemoCounter.TaskServices);const{authorizers:r}=this;return new task_1.TaskService(e,{authorizers:r,onSubscription:this.onSubscriptionChanged})}getTeamService(e){const{authorizers:r}=this;return new team_1.default(e,{authorizers:r,onSubscription:this.onSubscriptionChanged})}stopTrackingItem(e){}onSubscriptionChanged(e,r){if(this.opts.onSubscriptionChanged)return this.opts.onSubscriptionChanged(e,r)}}exports.Integrations=Integrations;