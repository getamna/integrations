"use strict";var __awaiter=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(o,a){function n(t){try{d(s.next(t))}catch(t){a(t)}}function r(t){try{d(s.throw(t))}catch(t){a(t)}}function d(t){var e;t.done?o(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(n,r)}d((s=s.apply(t,e||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0});const __1=require("..");class Google extends __1.TaskInterface{constructor(t,e){super(t,e),this.opts=e,this.httpClient.defaults.baseURL="https://tasks.googleapis.com/tasks/v1/"}getAllTaskGroups(){return __awaiter(this,void 0,void 0,(function*(){const t=yield this.httpClient.get("users/@me/lists"),e=[];return t.data.items.forEach(t=>{const{id:i,title:s}=t;e.push({id:i,name:s})}),e}))}getAllTasks(){return __awaiter(this,void 0,void 0,(function*(){const t=[],e=yield this.getAllTaskGroups();for(const i of e){const e=(yield this.httpClient.get(`lists/${i.id}/tasks`)).data;e.items&&e.items.forEach(e=>{const{id:s,title:o,status:a,due:n}=e;t.push({id:s,projectId:i.id,title:o,isCompleted:"completed"==a,dueDate:n?{date:n}:void 0})})}return t}))}getTaskGroup(t){return __awaiter(this,void 0,void 0,(function*(){const e=(yield this.httpClient.get("users/@me/lists/"+t)).data,{id:i,title:s}=e;return{id:i,name:s}}))}createTaskGroup(t){return __awaiter(this,void 0,void 0,(function*(){const e={title:t},i=yield this.httpClient.post("users/@me/lists/",e);return 200==i.status?i.data.id:""}))}updateTaskGroup(t,e){return __awaiter(this,void 0,void 0,(function*(){const i={title:e};return 200==(yield this.httpClient.patch("users/@me/lists/"+t,i)).status}))}updateTask(t,e,i){var s;return __awaiter(this,void 0,void 0,(function*(){if(!i)throw new Error("Cannot update Google Task without Task List Id");const{title:o,dueDate:a}=e,n={title:o,due:null===(s=a)||void 0===s?void 0:s.date};return 200==(yield this.httpClient.patch(`lists/${i}/tasks/${t}`,n)).status}))}deleteTaskGroup(t){return __awaiter(this,void 0,void 0,(function*(){return 204==(yield this.httpClient.delete("users/@me/lists/"+t)).status}))}createTask(t,e){return __awaiter(this,void 0,void 0,(function*(){const{title:i,dueDate:s}=t,o={title:i,due:s?s.date:void 0};if(!e)throw new Error("Cannot get Google Task without Task List Id");const a=yield this.httpClient.post(`lists/${e}/tasks/`,o);return 200==a.status?a.data.id:""}))}getTaskById(t,e){return __awaiter(this,void 0,void 0,(function*(){if(!e)throw new Error("Cannot get Google Task without Task List Id");const i=yield this.httpClient.get(`lists/${e}/tasks/${t}`);if(200!=i.status)throw console.log(i),new Error("Request to Google Failed");const s=i.data,{title:o,status:a,due:n,selfLink:r}=s;return{id:s.id,projectId:e,title:o,isCompleted:"completed"===a,dueDate:n?{date:n}:void 0,link:r||""}}))}deleteTask(t,e){return __awaiter(this,void 0,void 0,(function*(){if(!e)throw new Error("Cannot get Google Task without Task List Id");return 204==(yield this.httpClient.get(`lists/${e}/tasks/${t}`)).status}))}}exports.Google=Google;