"use strict";var __awaiter=this&&this.__awaiter||function(t,e,o,i){return new(o||(o=Promise))((function(s,n){function r(t){try{d(i.next(t))}catch(t){n(t)}}function a(t){try{d(i.throw(t))}catch(t){n(t)}}function d(t){var e;t.done?s(t.value):(e=t.value,e instanceof o?e:new o((function(t){t(e)}))).then(r,a)}d((i=i.apply(t,e||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0});const __1=require("..");class Todoist extends __1.TaskInterface{constructor(t,e){super(t,e),this.opts=e,this.httpClient.defaults.baseURL="https://api.todoist.com/rest/v1/"}createTask(t){return __awaiter(this,void 0,void 0,(function*(){const e={content:t.title,due:t.dueDate},o=yield this.httpClient.post("tasks",e);if(200!=o.status)throw console.log(o),new Error("Request to Todoist Failed");return o.data.id}))}createTaskGroup(t){return __awaiter(this,void 0,void 0,(function*(){const e={name:t},o=yield this.httpClient.post("projects",e);if(200!=o.status)throw console.log(o),new Error("Request to Todoist Failed");return o.data.id}))}getTaskById(t){return __awaiter(this,void 0,void 0,(function*(){const e=yield this.httpClient.get("tasks/"+t);if(200!=e.status)throw console.log(e),new Error("Request to Todoist Failed");const o=e.data,i={id:o.id,title:o.content,isCompleted:o.completed};return o.due&&(i.dueDate={date:o.due.datetime}),i}))}getTaskGroup(t){return __awaiter(this,void 0,void 0,(function*(){const e=yield this.httpClient.get("projects/"+t);if(200!=e.status)throw console.log(e),new Error("Request to Todoist Failed");const o=e.data;return{id:o.id,name:o.name}}))}getAllTasks(){return __awaiter(this,void 0,void 0,(function*(){const t=yield this.httpClient.get("tasks");if(200!=t.status)throw console.log(t),new Error("Request to Todoist Failed");const e=[];return t.data.forEach(t=>{const{id:o,content:i,completed:s,due:n,url:r,project_id:a}=t;e.push({id:o,projectId:a,title:i,dueDate:n?{date:new Date(n.date)}:void 0,isCompleted:s,link:r})}),e}))}getAllTaskGroups(){return __awaiter(this,void 0,void 0,(function*(){const t=yield this.httpClient.get("projects");if(200!=t.status)throw console.log(t),new Error("Request to Todoist Failed");return t.data.map((function(t){return{id:t.id,name:t.name}}))}))}updateTask(t,e){return __awaiter(this,void 0,void 0,(function*(){const o={id:t,content:e.title,due_date:e.dueDate},i=yield this.httpClient.post("tasks/"+t,o);if(204!=i.status)throw console.log(i),new Error("Request to Todoist Failed");return!0}))}updateTaskGroup(t,e){return __awaiter(this,void 0,void 0,(function*(){const o={id:t,name:e},i=yield this.httpClient.post("projects/"+t,o);if(204!=i.status)throw console.log(i),new Error("Request to Todoist Failed");return!0}))}deleteTask(t){return __awaiter(this,void 0,void 0,(function*(){const e=yield this.httpClient.delete("tasks/"+t);if(204!=e.status)throw console.log(e),new Error("Request to Todoist Failed");return!0}))}deleteTaskGroup(t){return __awaiter(this,void 0,void 0,(function*(){const e=yield this.httpClient.delete("projects/"+t);if(204!=e.status)throw console.log(e),new Error("Request to Todoist Failed");return!0}))}}exports.Todoist=Todoist;