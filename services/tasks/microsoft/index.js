"use strict";var __awaiter=this&&this.__awaiter||function(t,e,o,i){return new(o||(o=Promise))((function(s,r){function a(t){try{d(i.next(t))}catch(t){r(t)}}function n(t){try{d(i.throw(t))}catch(t){r(t)}}function d(t){var e;t.done?s(t.value):(e=t.value,e instanceof o?e:new o((function(t){t(e)}))).then(a,n)}d((i=i.apply(t,e||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0});const __1=require("..");class Microsoft extends __1.TaskInterface{constructor(t,e){super(t,e),this.opts=e,this.httpClient.defaults.baseURL="https://graph.microsoft.com/beta/me/"}createTaskGroup(t){return __awaiter(this,void 0,void 0,(function*(){const e={displayName:t},o=yield this.httpClient.post("todo/lists",e);if(201!=o.status)throw console.log(o),new Error("Request to Microsoft Failed");return o.data.id}))}createTask(t,e){return __awaiter(this,void 0,void 0,(function*(){if(!e)throw new Error("Cannot create Microsoft Task without Task List Id");const o={title:t.title},i=yield this.httpClient.post(`todo/lists/${e}/tasks`,o);if(201!=i.status)throw console.log(i),new Error("Request to Microsoft Failed");return i.data.id}))}getTaskById(t,e){return __awaiter(this,void 0,void 0,(function*(){if(!e)throw new Error("Cannot get Microsoft Task without Task List Id");const o=yield this.httpClient.get(`todo/lists/${e}/tasks/${t}`);if(200!=o.status)throw console.log(o),new Error("Request to Microsoft Failed");const i=o.data;return{id:i.id,title:i.title,isCompleted:"completed"==i.status,dueDate:i.dueDateTime?{date:i.dueDateTime.dateTime,timezone:i.dueDateTime.timeZone}:void 0}}))}getTaskGroup(t){return __awaiter(this,void 0,void 0,(function*(){if(!t)throw new Error("Cannot get Microsoft Task without Task List Id");const e=yield this.httpClient.get("todo/lists/"+t);if(200!=e.status)throw console.log(e),new Error("Request to Microsoft Failed");const o=e.data;return{id:o.id,name:o.displayName}}))}getAllTaskGroups(){return __awaiter(this,void 0,void 0,(function*(){const t=yield this.httpClient.get("todo/lists");if(200!=t.status)throw console.log(t),new Error("Request to Microsoft Failed");const e=t.data,o=[];return e.value.forEach(t=>{o.push({id:t.id,name:t.displayName})}),o}))}getAllTasks(){return __awaiter(this,void 0,void 0,(function*(){const t=[],e=yield this.getAllTaskGroups();for(const o of e){(yield this.httpClient.get(`todo/lists/${o.id}/tasks`)).data.value.forEach(e=>{const{id:i,title:s,status:r,dueDateTime:a}=e;t.push({id:i,projectId:o.id,title:s,isCompleted:"completed"==r,dueDate:a?{date:a.dateTime,timezone:a.timeZone}:void 0})})}return t}))}updateTaskGroup(t,e){return __awaiter(this,void 0,void 0,(function*(){const o={id:t,displayName:e},i=yield this.httpClient.patch("todo/lists/"+t,o);if(200!=i.status)throw console.log(i),new Error("Request to Microsoft Failed");return!0}))}updateTask(t,e,o){return __awaiter(this,void 0,void 0,(function*(){if(!o)throw new Error("Cannot Get Microsoft Task without Task List Id");const i={id:t,title:e.title,dueDate:e.dueDate},s=yield this.httpClient.patch(`todo/lists/${o}/tasks/${t}`,i);if(200!=s.status)throw console.log(s),new Error("Request to Microsoft Failed");return!0}))}deleteTaskGroup(t){return __awaiter(this,void 0,void 0,(function*(){const e=yield this.httpClient.delete("todo/lists/"+t);if(204!=e.status)throw console.log(e),new Error("Request to Microsoft Failed");return!0}))}deleteTask(t,e){return __awaiter(this,void 0,void 0,(function*(){if(!e)throw new Error("Cannot Get Microsoft Task without Task List Id");const o=yield this.httpClient.delete(`todo/lists/${e}/tasks/${t}`);if(204!=o.status)throw console.log(o),new Error("Request to Microsoft Failed");return!0}))}}exports.Microsoft=Microsoft;