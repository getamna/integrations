"use strict";var __awaiter=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,r){function o(t){try{u(s.next(t))}catch(t){r(t)}}function a(t){try{u(s.throw(t))}catch(t){r(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(o,a)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0});const __1=require("..");class Github extends __1.TeamInterface{constructor(t,e){super(t,e),this.opts=e,this.httpClient.defaults.baseURL="https://api.github.com/repos/"}getWorkById(t,e,i){return __awaiter(this,void 0,void 0,(function*(){const s=(yield this.httpClient.get(`${e}/${i}/issues/${t}`)).data,{title:n,body:r,assignees:o}=s;return{id:t,title:n,body:r,assignees:o.map(t=>({id:t.id?t.id.toString():"",name:t.login}))}}))}searchAllIssues(t,e){return __awaiter(this,void 0,void 0,(function*(){const i=(yield this.httpClient({method:"get",url:`issues?q=author:${t}+${e}`,baseURL:"https://api.github.com/search/"})).data,s=[];return i.items.forEach(t=>{s.push({id:t.id.toString(),title:t.title,body:t.body,assignees:t.assignees.map(t=>({name:t.login,id:t.id.toString()}))})}),s}))}createIssue(t,e,i){return __awaiter(this,void 0,void 0,(function*(){if(!i||!e)throw new Error("Cannot get create issue without owner name or repository name");const{title:s,body:n,assignees:r}=t,o={title:s,body:n,assignees:r},a=yield this.httpClient.post(`${e}/${i}/issues`,o);if(201==a.status){return a.data.number.toString()}return""}))}deleteIssue(t){throw new Error("Method not implemented.")}}exports.Github=Github;